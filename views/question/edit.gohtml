{[/* layout: basic */]}

{[define "body"]}
<mu-form ref="form" :model="question">
    <mu-form-item label="问题" prop="content" :rules="contentRules">
        <mu-text-field multi-line :rows="10" v-model="question.content" prop="content"></mu-text-field>
    </mu-form-item>

    <mu-form-item prop="urgent">
	<mu-switch v-model="question.urgent" label="我很着急，恳请尽快回复"></mu-switch>
    </mu-form-item>

    <mu-form-item prop="private">
	<mu-switch v-model="question.private" label="涉及隐私，请勿公开展示"></mu-switch>
    </mu-form-item>

    <mu-flex justify-content="center" align-items="center">
        <mu-button color="primary" @click="submit">提交</mu-button>
    </mu-flex>
</mu-form>
{[end]}


{[define "script"]}
<script>
let vm = new Vue(lotus.buildVueConfig({
	el: 'div#app',

	data: {
		contentRules: [
			{ validate: (val) => val.trim().length >= 10, message: '问题不能短于10个字符。'},
		],
		question: {
			id: 0,
			urgent: false,
			private: false,
			content: '',
		},
	},

	methods: {
		init(id) {
			lotus.callApi('get-question-by-id', {id: id})
				.then(res => {
					this.question = res;
				}).catch(err => {
				    lotus.alert(err.message);
				});
		},

		submit() {
			this.$refs.form.validate()
				.then(res => {
					return res && lotus.callApi('edit-question', this.question)
				}).then(res => {
					return res && this.$message.alert('提问成功，点击“确定”按钮返回问题列表。');
				}).then(res => {
					res && (location.href = '/question/mine.html');
				}).catch(err => {
				    this.$alert(err.message);
				});
		},
	},
}));

(function() {
	let id = lotus.getUrlArgs().id;
	id && vm.init(id);
})();
</script>
{[end]}
