{[/* layout: basic */]}

{[define "appBar"]}
    <div slot="right">
        <mu-button icon @click="onShowFilterDialog"><mu-icon value="search"></mu-icon></mu-button>
    </div>
{[end]}

{[define "body"]}
<mu-list>
    <mu-list-item avatar v-for="q in users" :key="q.id">
        <mu-list-item-action>
            <mu-checkbox v-model="user.selected"></mu-checkbox>
        </mu-list-item-action>
        <mu-list-item-content>
            <mu-list-item-title>{{user.nickName}}</mu-list-item-title>
            <mu-list-item-sub-title><mu-badge color="primary" :content="formatRole(user.role)"></mu-badge></mu-list-item-sub-title>
        </mu-list-item-content>
        <mu-list-item-action>
            <mu-avatar><a :href="'/user/index.html?id='+user.id"><img :src="user.avatar"></a></mu-avatar>
        </mu-list-item-action>
    </mu-list-item>
</mu-list>

<mu-flex justify-content="center">
    <mu-pagination raised v-if="pagination.total > pagination.size" @change="onPageChange" :total="pagination.total" :current.sync="pagination.current" :page-size="pagination.size"></mu-pagination>
</mu-flex>

<mu-dialog :open.sync="filterDialog.visible" title="设置问题过滤条件">
    <mu-text-field prefix="昵称" v-model="filterDialog.nickName" full-width></mu-text-field>
    <mu-select label="角色" v-model="filterDialog.role" full-width>
        <mu-option label="全部" :value="0"></mu-option>
        <mu-option v-for="r in roles" :key="r.value" :label="r.name" :value="r.value"></mu-option>
    </mu-select>
    <mu-button slot="actions" flat color="primary" @click="onCloseFilterDialog">确定</mu-button>
</mu-dialog>
{[end]}

{[define "script"]}
<script>
var vm = new Vue(lotus.buildVueConfig({
	el: 'div#app',

	data: {
		filterDialog: {
			asker: 0,
			replier: 0,
			tag: 0,
			urgent: false,
			featured: false,
            visible: false,
        },

        pagination: {
            total: 1,
            current: 1,
            size: 10,
        },

        questions: [],
	},

	methods: {
		refresh() {
			let args = {
{[if eq .mode "mine"]}
				mine: true,
{[else if eq .mode "featured"]}
				featured: true,
{[else if eq .mode ""]}
{[else]}

{[end]}
                pageSize: this.pagination.size,
                pageNumber: this.pagination.current - 1,
            };

            lotus.callApi('find-question', args)
                .then(res => {
                    this.questions = res.questions;
                    this.pagination.total = res.total;
                    this.pagination.current = res.pageNumber + 1;
                }).catch(err => {
                    this.$alert(err.message);
                });
		},

		onPageChange() {
			this.refresh()
		}
	},
}));

vm.refresh();
</script>
{[end]}