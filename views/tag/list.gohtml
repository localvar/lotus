{[/* layout: basic */]}

{[define "style"]}
<style>
</style>
{[end]}

{[define "body"]}
    <mt-header fixed title="标签管理"></mt-header>
    <mt-cell v-for="tag in tags" :key="tag" :title="tag.name">
        <mt-button @click="onRemoveTag(tag)">删除</mt-button>
    </mt-cell>
    <mt-cell>
        <mt-button @click="onAddTag">添加新标签</mt-button>
    </mt-cell>
{[end]}

{[define "script"]}
<script>
    var vm = new Vue({
        el: 'div#app',

        data: {
            tags: [],
        },

        methods: {
            init() {
                lotus.callApi('list-tags')
                    .then(res=>{
                        this.tags = res
                    }).catch(err=>{
                       console.log(err.message)
                    })
            },

            onRemoveTag(tag) {
                this.$messagebox.confirm('确实要删除这个标签吗？')
                    .then(_ => {
                        return lotus.callApi('delete-tag', {id: tag.id})
                    }).then(_ => {
                        this.tags.splice(this.tags.indexOf(tag), 1)
                    }).catch(err => {
                        if(err !== 'cancel') {
                            this.$toast(err.message)
                        }
                    })
            },

            onAddTag() {
                this.$messagebox.prompt('请输入标签名称')
                    .then(({value})=>{
                        if(value.trim().length > 0) {
                            return lotus.callApi('add-tag', {name: value})
                        }
                    }).then(res => {
                        if( res && res.id ) {
                            this.tags.push(res);
                        }
                    }).catch(err => {
                        if(err !== 'cancel') {
                            this.$toast(err.message)
                        }
                    })
            }
        },
    })

    vm.init()
</script>
{[end]}
