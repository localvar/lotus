{[/* layout: basic */]}

{[define "style"]}
<style>
    .el-tag + .el-tag {
        margin-left: 10px;
    }
    .button-new-tag {
        margin-left: 10px;
        height: 32px;
        line-height: 30px;
        padding-top: 0;
        padding-bottom: 0;
    }
    .input-new-tag {
        width: 90px;
        margin-left: 10px;
        vertical-align: bottom;
    }
</style>
{[end]}

{[define "body"]}
    <el-tag
            :key="tag"
            v-for="tag in tags"
            closable
            :disable-transitions="false"
            @click="onTagClick(tag)"
            @close="onRemoveTag(tag)">
    {{tag.name}}
    </el-tag>
    <el-input
            class="input-new-tag"
            v-if="inputVisible"
            v-model="inputValue"
            ref="saveTagInput"
            size="small"
            @keyup.enter.native="onConfirmInput"
            @blur="onConfirmInput"
    >
    </el-input>
    <el-button v-else class="button-new-tag" size="small" @click="onShowInput">+ 新标签</el-button>
{[end]}

{[define "script"]}
<script>
    var vm = new Vue({
        el: 'div#app',

        data: {
            inputVisible: false,
            inputValue: '',
            tags: {[.tags]},
        },

        methods: {
            onRemoveTag(tag) {
                this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);
            },

            onShowInput() {
                this.inputVisible = true;
                this.$nextTick(_ => {
                    this.$refs.saveTagInput.$refs.input.focus();
                });
            },

            onConfirmInput() {
                let inputValue = this.inputValue;
                if (inputValue) {
                    this.dynamicTags.push(inputValue);
                }
                this.inputVisible = false;
                this.inputValue = '';
            },

            onTagClick(tag) {
                alert("abcd")
            }
        },
    })
</script>
{[end]}
