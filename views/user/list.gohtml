{[/* layout: basic */]}

{[define "style"]}
<style>
</style>
{[end]}

{[define "title"]}用户管理{[end]}

{[define "body"]}
<mu-appbar color="primary">
    <mu-button icon slot="left">
        <mu-icon value="menu"></mu-icon>
    </mu-button>
    <div slot="right">
        <mu-button icon @click="onShowFilterDialog"><mu-icon value="filter_list"></mu-icon></mu-button>
        <mu-button icon @click="onShowRoleDialog"><mu-icon value="perm_identity"></mu-icon></mu-button>
    </div>
</mu-appbar>

<mu-list>
    <mu-list-item avatar v-for="user in users" :key="user.id">
        <mu-list-item-action>
            <mu-checkbox v-model="user.selected"></mu-checkbox>
        </mu-list-item-action>
        <mu-list-item-content>
            <mu-list-item-title>{{user.nickName}}</mu-list-item-title>
            <mu-list-item-sub-title><mu-badge color="primary" :content="formatRole(user.role)"></mu-badge></mu-list-item-sub-title>
        </mu-list-item-content>
        <mu-list-item-action>
            <mu-avatar><a :href="'/user/index.html?id='+user.id"><img :src="user.avatar"></a></mu-avatar>
        </mu-list-item-action>
    </mu-list-item>
</mu-list>

<mu-flex justify-content="center">
    <mu-pagination raised v-if="pagination.total > pagination.size" @change="onPageChange" :total="pagination.total" :current.sync="pagination.current" :page-size="pagination.size"></mu-pagination>
</mu-flex>

<mu-dialog :open.sync="roleDialog.visible" title="设置选中用户的角色">
    <mu-list>
        <mu-list-item v-for="r in roles" :key="r.value">
            <mu-list-item-content>
                <mu-radio :value="r.value" v-model="roleDialog.role" :label="r.name"></mu-radio>
            </mu-list-item-content>
        </mu-list-item>
    </mu-list>
    <mu-button slot="actions" flat color="primary" @click="onCloseRoleDialog">确定</mu-button>
</mu-dialog>

<mu-dialog :open.sync="filterDialog.visible" title="设置用户过滤条件">
    <mu-text-field prefix="昵称" v-model="filterDialog.nickName" full-width></mu-text-field>
    <mu-select label="角色" v-model="filterDialog.role" full-width>
        <mu-option label="全部" :value="0"></mu-option>
        <mu-option v-for="r in roles" :key="r.value" :label="r.name" :value="r.value"></mu-option>
    </mu-select>
    <mu-button slot="actions" flat color="primary" @click="onCloseFilterDialog">确定</mu-button>
</mu-dialog>
{[end]}

{[define "script"]}
<script>
let vm = new Vue({
    el: 'div#app',

    data: {
        roles: lotus.roles,

        roleDialog: {
            visible: false,
            role: 1,
        },

        filterDialog: {
            visible: false,
            nickName: '',
            role: 0,
        },

        pagination: {
            total: 1,
            current: 1,
            size: 10,
        },

        users: [],
    },

    methods: {
        formatRole: lotus.formatRole,

        findUser() {
            let args = {
                nickName: this.filterDialog.nickName,
                role: this.filterDialog.role,
                pageSize: this.pagination.size,
                pageNumber: this.pagination.current - 1,
            };

            lotus.callApi('find-user', args)
                .then(res => {
                    this.users = res.users;
                    this.pagination.total = res.total;
                    this.pagination.current = res.pageNumber + 1;
                }).catch(err => {
                    this.$alert(err.message);
                });
        },

        onShowRoleDialog() {
            for(let u of this.users) {
                if(u.selected) {
                    this.roleDialog.visible = true;
                    break;
                }
            }
        },

        onCloseRoleDialog() {
            this.roleDialog.visible = false;
            let users = [], role = this.roleDialog.role, ids = [];
            for(let u of this.users) {
                if(u.selected) {
                    users.push(u)
                    ids.push(u.id)
                }
            }
            lotus.callApi('set-user-role', {role: role, ids: ids})
                .then(_ => {
                    for(let u of users) {
                        u.role = role;
                    }
                }).catch(err => {
                    this.$alert(err.message);
                })
        },

        onShowFilterDialog() {
            this.filterDialog.visible = true;
        },

        onCloseFilterDialog() {
            this.filterDialog.visible = false;
            this.pagination.pageNumber = 1;
            this.findUser();
        },

        onPageChange() {
            this.findUser()
        },
    }
});

vm.findUser();
</script>
{[end]}
